<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="FeedbackSubjectItem" xml:space="preserve">
    <value>CodeWhite - Feedback ({0})</value>
  </data>
  <data name="ItemDashItem" xml:space="preserve">
    <value>{0} - {1}</value>
  </data>
  <data name="OK" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="PleaseRateCw" xml:space="preserve">
    <value>Please Rate SA CodeWhite</value>
  </data>
  <data name="SendFeedback" xml:space="preserve">
    <value>Send Feedback</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="OpenAppSettings" xml:space="preserve">
    <value>Open App Settings</value>
  </data>
  <data name="Loading" xml:space="preserve">
    <value>Loading...</value>
  </data>
  <data name="ItemSpaceItem" xml:space="preserve">
    <value>{0} {1}</value>
  </data>
  <data name="Attributions" xml:space="preserve">
    <value>Attributions</value>
  </data>
  <data name="Total" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="ItemParenthesesItem" xml:space="preserve">
    <value>{0} ({1})</value>
  </data>
  <data name="TryAgain" xml:space="preserve">
    <value>Try Again</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="About" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="Feedback" xml:space="preserve">
    <value>Feedback</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="AddYourMessageBelow" xml:space="preserve">
    <value>Please add your message below</value>
  </data>
  <data name="ItemComma" xml:space="preserve">
    <value>{0},</value>
  </data>
  <data name="ItemCommaItem" xml:space="preserve">
    <value>{0}, {1}</value>
  </data>
  <data name="Hour" xml:space="preserve">
    <value>Hour</value>
  </data>
  <data name="EmailDirectly" xml:space="preserve">
    <value>Email outtaapps@gmail.com directly.</value>
  </data>
  <data name="SaCodeWhite" xml:space="preserve">
    <value>SA CodeWhite</value>
  </data>
  <data name="Hours" xml:space="preserve">
    <value>Hours</value>
  </data>
  <data name="Open" xml:space="preserve">
    <value>Open</value>
  </data>
  <data name="SA" xml:space="preserve">
    <value>SA</value>
  </data>
  <data name="FailedToLoad" xml:space="preserve">
    <value>Failed to load</value>
  </data>
  <data name="Theme" xml:space="preserve">
    <value>Theme</value>
  </data>
  <data name="NoInternet" xml:space="preserve">
    <value>No internet</value>
  </data>
  <data name="Oops" xml:space="preserve">
    <value>Oops</value>
  </data>
  <data name="Now" xml:space="preserve">
    <value>Now</value>
  </data>
  <data name="BasedOnDataProvidedSa" xml:space="preserve">
    <value>Based on or contains data provided by the Government of South Australia (Department for Health and Wellbeing). Copyright of the Government of South Australia.</value>
  </data>
  <data name="AmbulanceService" xml:space="preserve">
    <value>Ambulance Service</value>
  </data>
  <data name="EmergencyDepartment" xml:space="preserve">
    <value>Emergency Department</value>
  </data>
  <data name="Capacity" xml:space="preserve">
    <value>Capacity</value>
  </data>
  <data name="CommencedTreatment" xml:space="preserve">
    <value>Commenced Treatment</value>
  </data>
  <data name="ExpectedArrivals" xml:space="preserve">
    <value>Expected Arrivals</value>
  </data>
  <data name="Hospital" xml:space="preserve">
    <value>Hospital</value>
  </data>
  <data name="Resuscitation" xml:space="preserve">
    <value>Resuscitation</value>
  </data>
  <data name="WaitingToBeSeen" xml:space="preserve">
    <value>Waiting to be Seen</value>
  </data>
  <data name="Amber" xml:space="preserve">
    <value>Amber</value>
  </data>
  <data name="Ambulance" xml:space="preserve">
    <value>Ambulance</value>
  </data>
  <data name="Code" xml:space="preserve">
    <value>Code</value>
  </data>
  <data name="ED" xml:space="preserve">
    <value>ED</value>
  </data>
  <data name="ExpArrivals" xml:space="preserve">
    <value>Exp. Arrivals</value>
  </data>
  <data name="Green" xml:space="preserve">
    <value>Green</value>
  </data>
  <data name="ItemPercent" xml:space="preserve">
    <value>{0:0.##}%</value>
  </data>
  <data name="OfTotalCapacity" xml:space="preserve">
    <value>of total capacity</value>
  </data>
  <data name="Red" xml:space="preserve">
    <value>Red</value>
  </data>
  <data name="Treating" xml:space="preserve">
    <value>Treating</value>
  </data>
  <data name="UnableToSendEmail" xml:space="preserve">
    <value>Unable to Send Email</value>
  </data>
  <data name="Waiting" xml:space="preserve">
    <value>Waiting</value>
  </data>
  <data name="White" xml:space="preserve">
    <value>White</value>
  </data>
  <data name="AmbulanceClearanceLast3Hrs" xml:space="preserve">
    <value>Ambulance Clearance (last 3hrs)</value>
  </data>
  <data name="AvgTime" xml:space="preserve">
    <value>Avg. Time</value>
  </data>
  <data name="AvgWaitTime" xml:space="preserve">
    <value>Avg. Wait Time</value>
  </data>
  <data name="Cleared" xml:space="preserve">
    <value>Cleared</value>
  </data>
  <data name="GreaterThan30Mins" xml:space="preserve">
    <value>&gt; 30mins</value>
  </data>
  <data name="HospitalCode" xml:space="preserve">
    <value>Hospital Code</value>
  </data>
  <data name="ItemHr" xml:space="preserve">
    <value>{0}hr</value>
  </data>
  <data name="ItemHrs" xml:space="preserve">
    <value>{0}hrs</value>
  </data>
  <data name="ItemMin" xml:space="preserve">
    <value>{0}min</value>
  </data>
  <data name="ItemMins" xml:space="preserve">
    <value>{0}mins</value>
  </data>
  <data name="ItemResus" xml:space="preserve">
    <value>{0} resus</value>
  </data>
  <data name="Space" xml:space="preserve">
    <value> </value>
  </data>
  <data name="Dark" xml:space="preserve">
    <value>Dark</value>
  </data>
  <data name="Light" xml:space="preserve">
    <value>Light</value>
  </data>
  <data name="System" xml:space="preserve">
    <value>System</value>
  </data>
  <data name="Notifications" xml:space="preserve">
    <value>Notifications</value>
  </data>
  <data name="NotificationsDescription" xml:space="preserve">
    <value>Push notifications for when a hospital's emergency department alert status changes to white.</value>
  </data>
  <data name="SAHealth" xml:space="preserve">
    <value>SA Health</value>
  </data>
  <data name="Disclaimer" xml:space="preserve">
    <value>Disclaimer</value>
  </data>
  <data name="DisclaimerResponsibleForAccuracy" xml:space="preserve">
    <value>If you rely on the information from this app you are responsible for ensuring by independent verification its accuracy, currency or completeness.</value>
  </data>
  <data name="DisclaimerUseOfInformation" xml:space="preserve">
    <value>Use of the information and data contained within this app is at your sole risk.</value>
  </data>
  <data name="BurnCode" xml:space="preserve">
    <value>BURN</value>
  </data>
  <data name="BurnName" xml:space="preserve">
    <value>Burn</value>
  </data>
  <data name="CcuCode" xml:space="preserve">
    <value>CCU</value>
  </data>
  <data name="CcuName" xml:space="preserve">
    <value>Coronary Care</value>
  </data>
  <data name="IcuCode" xml:space="preserve">
    <value>ICU</value>
  </data>
  <data name="IcuName" xml:space="preserve">
    <value>Intensive Care</value>
  </data>
  <data name="ItemSlashItem" xml:space="preserve">
    <value>{0}/{1}</value>
  </data>
  <data name="MhCode" xml:space="preserve">
    <value>MH</value>
  </data>
  <data name="MhName" xml:space="preserve">
    <value>Mental Health</value>
  </data>
  <data name="NeoCode" xml:space="preserve">
    <value>NEO</value>
  </data>
  <data name="NeoName" xml:space="preserve">
    <value>Neonatal</value>
  </data>
  <data name="ObstCode" xml:space="preserve">
    <value>OBST</value>
  </data>
  <data name="ObstName" xml:space="preserve">
    <value>Obstetric</value>
  </data>
  <data name="PaedCode" xml:space="preserve">
    <value>PAED</value>
  </data>
  <data name="PaedName" xml:space="preserve">
    <value>Paediatric</value>
  </data>
  <data name="SpecialtyBeds" xml:space="preserve">
    <value>Specialty Beds</value>
  </data>
  <data name="WaitingTimes" xml:space="preserve">
    <value>Waiting Times</value>
  </data>
  <data name="ItemOfItem" xml:space="preserve">
    <value>{0} of {1}</value>
  </data>
  <data name="AccessBlock" xml:space="preserve">
    <value>Access Block</value>
  </data>
  <data name="ItemH" xml:space="preserve">
    <value>{0}h</value>
  </data>
  <data name="ItemM" xml:space="preserve">
    <value>{0}m</value>
  </data>
  <data name="Busy" xml:space="preserve">
    <value>Busy</value>
  </data>
  <data name="Normal" xml:space="preserve">
    <value>Normal</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="VeryBusy" xml:space="preserve">
    <value>Very Busy</value>
  </data>
  <data name="CodeWhite" xml:space="preserve">
    <value>Code White</value>
  </data>
  <data name="Occupancy" xml:space="preserve">
    <value>Occupancy</value>
  </data>
  <data name="WaitingForBed" xml:space="preserve">
    <value>Waiting for bed</value>
  </data>
  <data name="InpatientBedStatus" xml:space="preserve">
    <value>Inpatient Bed Status</value>
  </data>
  <data name="Pulse" xml:space="preserve">
    <value>Pulse</value>
  </data>
  <data name="InpatientsWaitingForBed" xml:space="preserve">
    <value>Inpatients waiting for a bed</value>
  </data>
  <data name="ItemTotal" xml:space="preserve">
    <value>{0} total</value>
  </data>
</root>